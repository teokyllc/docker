name: Github Actions Runner image

on:
  workflow_dispatch:
    inputs:
      deploy_image:
        description: 'Deploy the image to Kubernetes after building/pushing?'
        default: false
        required: true
        type: boolean

env:
  RUNNER_VERSION: 2.311.0 # https://github.com/actions/runner/releases
  RUNNER_CONTAINER_HOOKS_VERSION: 0.5.0 # https://github.com/actions/runner-container-hooks/releases
  DOCKER_VERSION: 24.0.7 # https://download.docker.com/linux/static/stable/x86_64/
  DOCKER_COMPOSE_VERSION: 2.18.1 # https://github.com/docker/compose/releases
  DUMB_INIT_VERSION: 1.2.5 # https://github.com/Yelp/dumb-init/releases
  YQ_VERSION: 4.34.1 # https://github.com/mikefarah/yq/releases
  ISTIOCTL_VERSION: 1.19.1 # https://github.com/istio/istio/releases/
  CONTAINER_REGISTRY: 621672204142.dkr.ecr.us-east-2.amazonaws.com
  RUNNER_IMAGE_NAME: github-actions-runner
  RUNNER_OS_NAME: ubuntu
  RUNNER_OS_VERSION: 20.04
  AWS_REGION: us-east-2
  EKS_CLUSTER: mrionline-east2-test
  RUNNER_REPLICAS: 5

jobs:
  build-runner:
    name: Build Github Actions image
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up the Docker context for buildx
        id: buildx-context
        run: |
          docker context create builder

      - name: Set up Docker Buildx
        id: setup-docker
        uses: docker/setup-buildx-action@v2
        with:
          endpoint: builder
          install: true

      - name: Get Short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: docker/actions-runner/
          push: true
          tags: ${{ env.CONTAINER_REGISTRY }}/${{ env.RUNNER_IMAGE_NAME }}:v${{ env.RUNNER_VERSION }}-${{ env.RUNNER_OS_NAME }}-${{ env.RUNNER_OS_VERSION }}-${{ env.SHORT_SHA }}, ${{ env.CONTAINER_REGISTRY }}/${{ env.RUNNER_IMAGE_NAME }}:lastest
          file: docker/actions-runner/Dockerfile
          build-args: |
            RUNNER_VERSION=${{ env.RUNNER_VERSION }}
            RUNNER_CONTAINER_HOOKS_VERSION=${{ env.RUNNER_CONTAINER_HOOKS_VERSION }}
            DOCKER_VERSION=${{ env.DOCKER_VERSION }}
            DUMB_INIT_VERSION=${{ env.DUMB_INIT_VERSION }}
            DOCKER_COMPOSE_VERSION=${{ env.DOCKER_COMPOSE_VERSION }}
            YQ_VERSION=${{ env.YQ_VERSION }}
            ISTIOCTL_VERSION=${{ env.ISTIOCTL_VERSION }}

      - name: Update runner deployment
        if: ${{ inputs.deploy_image }}
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}

          GIT_PAT=$(aws ssm get-parameter --name "github_actions_token" --with-decryption --region ${{ env.AWS_REGION }} | jq -r '.Parameter.Value')
          kubectl -n actions-runner-system delete secret controller-manager
          kubectl -n actions-runner-system create secret generic controller-manager --from-literal=github_token=${GIT_PAT}

          helm repo add actions-runner-controller https://actions-runner-controller.github.io/actions-runner-controller
          helm upgrade --install \
            --namespace actions-runner-system \
            --set image.actionsRunnerRepositoryAndTag=${{ env.CONTAINER_REGISTRY }}/${{ env.RUNNER_IMAGE_NAME }}:v${{ env.RUNNER_VERSION }}-${{ env.RUNNER_OS_NAME }}-${{ env.RUNNER_OS_VERSION }}-${{ env.SHORT_SHA }} \
            --wait \
            --atomic \
            actions-runner-controller \
            actions-runner-controller/actions-runner-controller

          cat <<EOF | kubectl apply -f -
          apiVersion: actions.summerwind.dev/v1alpha1
          kind: RunnerDeployment
          metadata:
            name: runnerdeploy
            namespace: actions-runner-system
          spec:
            replicas: ${{ env.RUNNER_REPLICAS }}
            template:
              spec:
                dockerdWithinRunnerContainer: true
                image: "${{ env.CONTAINER_REGISTRY }}/${{ env.RUNNER_IMAGE_NAME }}:v${{ env.RUNNER_VERSION }}-${{ env.RUNNER_OS_NAME }}-${{ env.RUNNER_OS_VERSION }}-${{ env.SHORT_SHA }}"
                organization: Medality-Health
          EOF
