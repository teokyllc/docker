name: Github Actions Runner Images

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - 'main'
    paths:
      - 'Actions-Runner/**'
      - '.github/workflows/runners.yaml'
      - '!**.md'
  push:
    branches:
      - 'main'
    paths:
      - 'Actions-Runner/**'
      - '.github/workflows/runners.yaml'
      - '!**.md'

env:
  RUNNER_VERSION: 2.298.2
  DOCKER_VERSION: 20.10.12
  DUMB_INIT_VERSION: 1.2.5
  CONTAINER_REGISTRY: cr.teokyllc.internal
  CR_USERNAME: ataylor
  RUNNER_IMAGE_NAME: actions-runner-dind
  RUNNER_OS_NAME: ubuntu
  RUNNER_OS_VERSION: 22.04
  VAULT_ADDR: "https://vault.teokyllc.internal:8200"
  VAULT_TOKEN: ${{secrets.VAULT_TOKEN}}

jobs:
  build-runners:
    name: Build ${{ env.RUNNER_IMAGE_NAME }}-${{ env.RUNNER_OS_NAME }}-${{ env.RUNNER_OS_VERSION }}
    runs-on: [self-hosted]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Short SHA
        id: sha
        run: echo ::set-output name=sha_short::${GITHUB_SHA::8}
        shell: bash

      - name: Login to DockerHub
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ env.CR_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

      - name: Build versioned Runner image
        run: |
            docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.RUNNER_IMAGE_NAME }}:v${{ env.RUNNER_VERSION }}-${{ env.RUNNER_OS_NAME }}-${{ RUNNER_OS_VERSION }}-${{ steps.sha.outputs.sha_short }} \
              --build-arg RUNNER_VERSION=${{ env.RUNNER_VERSION }} \
              --build-arg DOCKER_VERSION=${{ env.DOCKER_VERSION }} \
              --build-arg DUMB_INIT_VERSION=${{ env.DUMB_INIT_VERSION }} \
              --build-arg VAULT_ADDR=${{ env.VAULT_ADDR }} \
              --build-arg VAULT_TOKEN=${{ env.VAULT_TOKEN }} \
              --build-arg TARGETPLATFORM=linux/amd64 \
              -f Actions-Runner/actions-runner-dind.dockerfile \
              .

      - name: Build latest Runner image
        run: |
            docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ matrix.name }}:latest \
              --build-arg RUNNER_VERSION=${{ env.RUNNER_VERSION }} \
              --build-arg DOCKER_VERSION=${{ env.DOCKER_VERSION }} \
              --build-arg DUMB_INIT_VERSION=${{ env.DUMB_INIT_VERSION }} \
              --build-arg VAULT_ADDR=${{ env.VAULT_ADDR }} \
              --build-arg VAULT_TOKEN=${{ env.VAULT_TOKEN }} \
              --build-arg TARGETPLATFORM=linux/amd64 \
              -f Actions-Runner/actions-runner-dind.dockerfile \
              .

      - name: Build latest DinD image
        run: |
            docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ matrix.name }}:latest \
              --build-arg RUNNER_VERSION=${{ env.RUNNER_VERSION }} \
              --build-arg DOCKER_VERSION=${{ env.DOCKER_VERSION }} \
              --build-arg DUMB_INIT_VERSION=${{ env.DUMB_INIT_VERSION }} \
              --build-arg VAULT_ADDR=${{ env.VAULT_ADDR }} \
              --build-arg VAULT_TOKEN=${{ env.VAULT_TOKEN }} \
              --build-arg TARGETPLATFORM=linux/amd64 \
              -f Actions-Runner/actions-runner-dind.dockerfile \
              .

      - name: Push Docker images
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
            docker push ${{ env.CONTAINER_REGISTRY }}/${{ matrix.name }}:v${{ env.RUNNER_VERSION }}-${{ matrix.os-name }}-${{ matrix.os-version }}-${{ steps.sha.outputs.sha_short }}
            docker push ${{ env.CONTAINER_REGISTRY }}/${{ matrix.name }}:latest

      - name: Release the new image
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
            mkdir ~/.kube
            vault kv get -mount=kv -field=kubeconfig kubeconfig > ~/.kube/config
            sudo chmod o-r ~/.kube/config && sudo chmod g-r ~/.kube/config
            helm repo add actions-runner-controller \
              https://actions-runner-controller.github.io/actions-runner-controller
            helm upgrade --install \
              --namespace actions-runner-system \
              --create-namespace \
              --set=authSecret.enabled=true \
              --set=authSecret.create=true \
              --set=authSecret.github_token=$(vault kv get -mount=kv -field=pat github) \
              --set=image.actionsRunnerRepositoryAndTag="${{ env.CONTAINER_REGISTRY }}/${{ matrix.name }}:v${{ env.RUNNER_VERSION }}-${{ matrix.os-name }}-${{ matrix.os-version }}-${{ steps.sha.outputs.sha_short }}" \
              --set=image.dindSidecarRepositoryAndTag="${{ env.CONTAINER_REGISTRY }}/dind:4" \
              --set=image.actionsRunnerImagePullSecrets[0]=cr-access \
              actions-runner-controller \
              actions-runner-controller/actions-runner-controller